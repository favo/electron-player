name: pintomind-player # you probably want to 'snapcraft register <name>'
version: "0.2.2" # just for humans, typically '1.2+git' or '1.3.2'
summary: PinToMind player to be used in kiosk mode # 79 char long summary
description: PinToMind player for app.pintomind.com
confinement: devmode
compression: lzo
grade: devel
base: core20
system-usernames:
  snap_daemon: shared

apps:
  pintomind-player:
    daemon: simple
    restart-condition: always
    command-chain: 
      - desktop-launch
      - xwayland-kiosk-launch
      - bin/drop-snap-daemon
    command: usr/bin/wrapper -p systemd
    slots:
    - x11
    plugs:
    - audio-playback
    - browser-support
    - network
    - network-bind
    - network-manager
    - opengl
    - pulseaudio
    - wayland
    - x11-plug

plugs:
  x11-plug:
    interface: x11

environment:
  XWAYLAND_FULLSCREEN_WINDOW_HINT: window_role="browser-window"

parts:
  pintomind-player:
    plugin: nodejs
    nodejs-package-manager: npm
    nodejs-version: 12.18.2
    source: https://github.com/favo/electron-player.git
    after: [desktop-gtk3, xwayland-kiosk-helper]
    override-build: |
        # Only try to build for architectures supported by Electron
        case $SNAPCRAFT_ARCH_TRIPLET in
          "i386-linux-gnu") ARCH="ia32";;
          "x86_64-linux-gnu") ARCH="x64";;
          "arm-linux-gnueabihf") ARCH="armv7l";;
          "aarch64-linux-gnu") ARCH="arm64";;
          *) echo "ERROR: electron does not support the '$SNAPCRAFT_ARCH_TRIPLET' architecture" && exit 1;;
        esac
        # Tell snapcraft nodejs plugin where to find installed node version due to https://bugs.launchpad.net/snapcraft/+bug/1886858
        PATH=$PATH:$SNAPCRAFT_PART_SRC/../npm/bin
        # Set npm permissions to allow global dependencies
        npm config set unsafe-perm True
        # Force use of proxy to work around build.snapcraft.io networking issues due to https://bugs.launchpad.net/snapcraft/+bug/1886861
        if [ -n "$http_proxy" ]; then
          export ELECTRON_GET_USE_PROXY=1
          export GLOBAL_AGENT_HTTP_PROXY="${http_proxy}"
          export GLOBAL_AGENT_HTTPS_PROXY="${http_proxy}"
        fi
        # Install dependencies
        npm install
        npm install -g node-gyp
        # Re-build d-bus package for Electron's node version
        ./node_modules/.bin/electron-rebuild
        # Package Electron application
        ./node_modules/.bin/electron-packager . --overwrite --platform=linux --arch=$ARCH --output=release-build --prune=true
        cp -v -R ./pintomind-player-linux-$ARCH $SNAPCRAFT_PART_INSTALL/pintomind-player
    stage-packages:
      - libasound2
      - libgconf-2-4
      - libpulse0
      - libnss3
      - libx11-xcb1
      - libxss1
      - libxtst6
      - setpriv
      - x11-xserver-utils
      - curl
    build-packages:
      - unzip

  # Adapted from snapcraft-desktop-helpers https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml#L183
  desktop-gtk3:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    stage-packages:
      - libxkbcommon0  # XKB_CONFIG_ROOT
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libgtk-3-0
      - libgdk-pixbuf2.0-0
      - libglib2.0-bin
      - libgtk-3-bin
      - unity-gtk3-module
      - libappindicator3-1
      - locales-all
      - xdg-user-dirs
      - ibus-gtk3
      - libibus-1.0-5
    override-prime: |
        snapcraftctl prime
        # Rebuild mime database as it seems to be missed
        update-mime-database $SNAPCRAFT_PRIME/usr/share/mime
  xwayland-kiosk-helper:
    plugin: cmake
    source: https://github.com/MirServer/xwayland-kiosk-helper.git
    build-packages: [ build-essential ]
    stage-packages: [ xwayland, i3, libegl1-mesa, libgl1-mesa-glx ]

  # Copy runtime helpers (including bin/drop-snap-daemon.sh) into snap
  pintomind-player-runtime-helpers:
    plugin: dump
    source: snap/local/runtime-helpers

  wrapper:
    plugin: dump
    source: wrapper
    organize:
      wrapper.sh: usr/bin/wrapper

architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64
